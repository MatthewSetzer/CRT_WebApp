@inject ISubGroupService SubGroupService
@inject IQuoteService QuoteService
@using CRT_WebApp.Shared
@implements IDisposable;

<div class="row">
    <div class="col-8">
        @foreach (var sub in SubGroupService.SubGroups)
        {
            <div>
                <SubGroup subGroup=sub></SubGroup>
            </div>
        }
    </div>
    <div class="col-4">
        <EditForm Model="@quote" OnValidSubmit="@addQuote">

            <label>Quote Name: </label>
            <div class="input-group mb-3">
                <InputText @bind-Value="quote.QuoteTitle"></InputText>
            </div>
            <div class="input-group mb-3">
                <label>Quote Total: @SubGroupService.GetSubGroupsTotal()</label>
            </div>
            <button class="btn btn-success" type="submit">Create Quote</button>
        </EditForm>
    </div>
</div>


@code {
    [Parameter]
    public SubGroupModel subGroup { get; set; }

    QuoteViewModel quote = new QuoteViewModel();

    protected override void OnInitialized()
    {
        SubGroupService.OnChange += StateHasChanged;
    }


    public void Dispose()
    {
        SubGroupService.OnChange -= StateHasChanged;
    }

    public void addQuote()
    {
        QuoteModel newQuote = new QuoteModel
        {
            QuoteTitle = quote.QuoteTitle,
            QuoteState = true,
            QuoteDate = DateTime.Now,
            QuoteUser = "Test",
            SubGroups = SubGroupService.GetSubGroupList(),
            Total = SubGroupService.GetSubGroupsTotal(),
            IsDeleted = false
        };

        QuoteService.AddQuote(newQuote);
    }
}
