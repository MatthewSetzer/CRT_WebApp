@page "/printpage"
@inject IQuoteService QuoteService
@inject IJSRuntime JSRuntime


<div id="PrintDiv">

    <div style=" text-align: center;">
        <img src="/Logo/LogoImg.jpg" style="max-width: 30%;">
    </div>

    <p><b>Concrete Restoration Team</b></p>
    <p>1391 SW 12th Avenue</p>
    <p>Pompano Beach FL 33069</p>
    <p>Phone: 954-974-7777</p>
    <p>Fax: 954-784-7773</p>

    <div style="text-align:center">
        <h2>@QuoteService.Quote.QuoteTitle</h2>
    </div>

    <div style="text-align:right">
        <h4><b>Date:</b> @QuoteService.Quote.QuoteDate</h4>
    </div>

    <br />
    <PrintList></PrintList>
    <br />
    <div class="row">
        @foreach (var imgUrl in imgUrls)
        {
            <img src="@imgUrl" style="max-width: 50%">
            <br />
            <br />
        }
    </div>
</div>

<hr />
<div class="row" style="padding-bottom: 100px;">
    <label>Add Images: </label> 
    <InputFile OnChange="@OnFileSelection"></InputFile>
    <button @onclick="@Print" class="btn btn-success" style="position: absolute; right: 100px; ">Create PDF</button>
</div>


@code {
    string Unite;
    string Street;
    string Suburb;
    string City;
    string StateProvince;

    List<string> imgUrls = new List<string>();




    private async Task OnFileSelection(InputFileChangeEventArgs e)
    {
        foreach (IBrowserFile imgFile in e.GetMultipleFiles(5))
        {
            var buffers = new byte[imgFile.Size];
            await imgFile.OpenReadStream().ReadAsync(buffers);
            string imageType = imgFile.ContentType;
            string imgUrl = $"data:{imageType};base64,{Convert.ToBase64String(buffers)}";
            imgUrls.Add(imgUrl);
        }
    }

    public async Task Print()
    {
        await JSRuntime.InvokeVoidAsync("printDiv");
    }

}
